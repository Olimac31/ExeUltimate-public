[gd_scene load_steps=15 format=2]

[ext_resource path="res://Assets/Shaders/scanlines.png" type="Texture" id=1]
[ext_resource path="res://Assets/Shaders/crt-overlay.tscn" type="PackedScene" id=2]
[ext_resource path="res://Assets/Shaders/global_shaders.gd" type="Script" id=3]
[ext_resource path="res://Assets/Shaders/WhiteNoiseSprite.gd" type="Script" id=4]
[ext_resource path="res://addons/EasyBlend/Blends/lighten.png" type="Texture" id=5]
[ext_resource path="res://addons/EasyBlend/EasyBlend.shader" type="Shader" id=6]
[ext_resource path="res://Scenes/reboot-message.tscn" type="PackedScene" id=7]

[sub_resource type="Shader" id=1]
code = "//---CRT Shader---
shader_type canvas_item;

uniform bool activated = false;
uniform float scanline_count : hint_range(0, 1800) = 50.0;
uniform float chromatic_aberration : hint_range(0.0, 5.0, 0.05);
uniform float screen_scale_amount : hint_range(0.5, 2.0, 0.005);
uniform float twist_power : hint_range(0.0, 5.0, 0.1);
uniform float twist_bend : hint_range(0.0, 10.0, 0.1);

vec2 uv_curve(vec2 uv)
{
	uv = (uv - 0.5) * 2.0;
	
	//You can modify the numbers and try different values
	uv.x *= 1.0 + pow(abs(uv.y) / twist_bend, twist_power);
	uv.y *= 1.0 + pow(abs(uv.x) / twist_bend, twist_power);
	
	//The scale part (you can delete it when you want)
	uv /= screen_scale_amount;
	
	uv = (uv/2.0) + 0.5;
	return uv;
}


void fragment()
{
	if (activated)
	{
	float PI = 3.14159;
	
	//You can modify the *3.0, *-3.0 for a bigger or smaller 
	float r = texture(SCREEN_TEXTURE, uv_curve(SCREEN_UV) + vec2(SCREEN_PIXEL_SIZE.x*chromatic_aberration), 0.0).r;
	float g = texture(SCREEN_TEXTURE, uv_curve(SCREEN_UV) + vec2(SCREEN_PIXEL_SIZE.x*0.0), 0.0).g;
	float b = texture(SCREEN_TEXTURE, uv_curve(SCREEN_UV) + vec2(SCREEN_PIXEL_SIZE.x*-chromatic_aberration), 0.0).b;
	
	
	//If you dont want scanlines you can just delete this part
	//float s = sin(uv_curve(SCREEN_UV).y * scanline_count * PI * 2.0);
	//s = (s * 0.5 + 0.5) * 0.9 + 0.1;
	//vec4 scan_line = vec4(vec3(pow(s, 0.25)), 1.0);
	
	
	//COLOR = vec4(r, g, b, 1.0) * scan_line;
	COLOR = vec4(r, g, b, 1.0);
	}
	else
	{
		COLOR = vec4(0.0, 0.0, 0.0, 0.0)
	}
}
"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/activated = true
shader_param/scanline_count = 40.0
shader_param/chromatic_aberration = 1.25
shader_param/screen_scale_amount = 1.005
shader_param/twist_power = 4.7
shader_param/twist_bend = 2.0

[sub_resource type="ShaderMaterial" id=7]
shader = ExtResource( 6 )
shader_param/enabled = true
shader_param/Intensity = 1.0
shader_param/Blend = ExtResource( 5 )

[sub_resource type="OpenSimplexNoise" id=5]
seed = 9
period = 0.1
persistence = 0.0

[sub_resource type="NoiseTexture" id=6]
flags = 3
width = 256
height = 256
seamless = true
noise = SubResource( 5 )

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform float brightness = 1.0;
uniform float contrast = 1.0;
uniform float saturation = 1.0;

void fragment() {
    vec3 c = textureLod(SCREEN_TEXTURE, SCREEN_UV, 0.0).rgb;

    c.rgb = mix(vec3(0.0), c.rgb, brightness);
    c.rgb = mix(vec3(0.5), c.rgb, contrast);
    c.rgb = mix(vec3(dot(vec3(1.0), c.rgb) * 0.33333), c.rgb, saturation);

    COLOR.rgb = c;
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/brightness = 1.2
shader_param/contrast = 1.0
shader_param/saturation = 1.0

[node name="global_shaders" type="Node2D"]
script = ExtResource( 3 )
reboot_message = ExtResource( 7 )

[node name="crt" type="CanvasLayer" parent="."]
layer = 99

[node name="ColorRect" type="ColorRect" parent="crt"]
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2

[node name="overlay" type="CanvasLayer" parent="."]
layer = 101

[node name="crt-overlay3" parent="overlay" instance=ExtResource( 2 )]
position = Vector2( 0, 720 )
rotation = -3.14159
scale = Vector2( -1, 0.766 )

[node name="crt-overlay4" parent="overlay" instance=ExtResource( 2 )]
position = Vector2( 1280, 0 )
scale = Vector2( -1, 0.766 )

[node name="crt-overlay2" parent="overlay" instance=ExtResource( 2 )]
position = Vector2( 1280, 720 )
rotation = -3.14159
scale = Vector2( 1, 0.765625 )

[node name="crt-overlay" parent="overlay" instance=ExtResource( 2 )]

[node name="noise" type="CanvasLayer" parent="."]
layer = 100

[node name="texture" type="TextureRect" parent="noise"]
pause_mode = 2
modulate = Color( 1, 1, 1, 0.0470588 )
material = SubResource( 7 )
margin_right = 429.0
margin_bottom = 243.0
rect_scale = Vector2( 3, 3 )
mouse_filter = 2
texture = SubResource( 6 )
expand = true
stretch_mode = 2
script = ExtResource( 4 )
timerMAX = 0.03

[node name="scanlines" type="CanvasLayer" parent="."]
layer = 97

[node name="Scanlines" type="Sprite" parent="scanlines"]
modulate = Color( 1, 1, 1, 0.0862745 )
position = Vector2( 654, 400 )
scale = Vector2( 134.8, 1 )
texture = ExtResource( 1 )

[node name="brightness_contrast" type="CanvasLayer" parent="."]
layer = 101

[node name="ColorRect" type="ColorRect" parent="brightness_contrast"]
material = SubResource( 4 )
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
